{"ast":null,"code":"var _jsxFileName = \"/Users/sambernal/Desktop/projects/2020-04-15-Conways-Game-of-Life/game-of-life/src/components/Board.js\";\nimport React from 'react';\n\nfunction Board(props) {\n  //generating board grid\n  const generateGrid = () => {\n    for (let row = 0; row < boardRows; row++) {\n      const tableData = [];\n\n      for (let column = 0; column < boardColumns; column++) {\n        tableData.push( /*#__PURE__*/React.createElement(\"td\", {\n          key: `${row}, ${column}`,\n          className: props.boardStatus[row][column] ? 'alive' : 'dead',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 6\n          }\n        }));\n      } //end of column for\n\n\n      tableRow.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 18\n        }\n      }, tableData));\n    } //end of row for\n\n\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, \" \", tableRow));\n  };\n\n  const finalGrid = generateGrid();\n  return finalGrid;\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/sambernal/Desktop/projects/2020-04-15-Conways-Game-of-Life/game-of-life/src/components/Board.js"],"names":["React","Board","props","generateGrid","row","boardRows","tableData","column","boardColumns","push","boardStatus","tableRow","finalGrid"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACrB;AACA,QAAMC,YAAY,GAAG,MAAM;AAC1B,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGC,SAAxB,EAAmCD,GAAG,EAAtC,EAA0C;AACzC,YAAME,SAAS,GAAG,EAAlB;;AACA,WAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGC,YAA9B,EAA4CD,MAAM,EAAlD,EAAsD;AACrDD,QAAAA,SAAS,CAACG,IAAV,eACC;AACC,UAAA,GAAG,EAAG,GAAEL,GAAI,KAAIG,MAAO,EADxB;AAEC,UAAA,SAAS,EAAEL,KAAK,CAACQ,WAAN,CAAkBN,GAAlB,EAAuBG,MAAvB,IAAiC,OAAjC,GAA2C,MAFvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,OATwC,CASvC;;;AACFI,MAAAA,QAAQ,CAACF,IAAT,eAAc;AAAI,QAAA,GAAG,EAAEL,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeE,SAAf,CAAd;AACA,KAZyB,CAYxB;;;AAEF,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAASK,QAAT,CADD,CADD;AAKA,GAnBD;;AAqBA,QAAMC,SAAS,GAAGT,YAAY,EAA9B;AACA,SAAOS,SAAP;AACA;;AAED,eAAeX,KAAf","sourcesContent":["import React from 'react';\n\nfunction Board(props) {\n\t//generating board grid\n\tconst generateGrid = () => {\n\t\tfor (let row = 0; row < boardRows; row++) {\n\t\t\tconst tableData = [];\n\t\t\tfor (let column = 0; column < boardColumns; column++) {\n\t\t\t\ttableData.push(\n\t\t\t\t\t<td\n\t\t\t\t\t\tkey={`${row}, ${column}`}\n\t\t\t\t\t\tclassName={props.boardStatus[row][column] ? 'alive' : 'dead'}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} //end of column for\n\t\t\ttableRow.push(<tr key={row}>{tableData}</tr>);\n\t\t} //end of row for\n\n\t\treturn (\n\t\t\t<table>\n\t\t\t\t<tbody> {tableRow}</tbody>\n\t\t\t</table>\n\t\t);\n\t};\n\n\tconst finalGrid = generateGrid();\n\treturn finalGrid;\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}